// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RH.Data;

#nullable disable

namespace RH.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240610233607_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RH.Models.Candidato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Candidato");
                });

            modelBuilder.Entity("RH.Models.CandidatoTecnologia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdCandidato")
                        .HasColumnType("int");

                    b.Property<int>("IdTecnologia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCandidato");

                    b.HasIndex("IdTecnologia");

                    b.ToTable("CandidatoTecnologia");
                });

            modelBuilder.Entity("RH.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("RH.Models.EmpresaTecnologia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<int>("IdTecnologia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdTecnologia");

                    b.ToTable("EmpresaTecnologia");
                });

            modelBuilder.Entity("RH.Models.EmpresaVaga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<int>("IdVaga")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdVaga");

                    b.ToTable("EmpresaVaga");
                });

            modelBuilder.Entity("RH.Models.Tecnologia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tecnologia");
                });

            modelBuilder.Entity("RH.Models.Vaga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aberta")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Vaga");
                });

            modelBuilder.Entity("RH.Models.VagaTecnologia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdTecnologia")
                        .HasColumnType("int");

                    b.Property<int>("IdVaga")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdTecnologia");

                    b.HasIndex("IdVaga");

                    b.ToTable("VagaTecnologia");
                });

            modelBuilder.Entity("RH.Models.VagaTecnologiaRequisito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdTecnologia")
                        .HasColumnType("int");

                    b.Property<int>("IdVaga")
                        .HasColumnType("int");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdTecnologia");

                    b.HasIndex("IdVaga");

                    b.ToTable("VagaTecnologiaRequisito");
                });

            modelBuilder.Entity("RH.Models.VinculoCanditadoVaga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdCandidato")
                        .HasColumnType("int");

                    b.Property<int>("IdVaga")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCandidato");

                    b.HasIndex("IdVaga");

                    b.ToTable("VinculoCanditadoVaga");
                });

            modelBuilder.Entity("RH.Models.VinculoCanditadoVagaTecnologia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdTecnologia")
                        .HasColumnType("int");

                    b.Property<int>("IdVinculoCandidatoVaga")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdTecnologia");

                    b.HasIndex("IdVinculoCandidatoVaga");

                    b.ToTable("VinculoCanditadoVagaTecnologia");
                });

            modelBuilder.Entity("RH.Models.CandidatoTecnologia", b =>
                {
                    b.HasOne("RH.Models.Candidato", null)
                        .WithMany()
                        .HasForeignKey("IdCandidato")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RH.Models.Tecnologia", null)
                        .WithMany()
                        .HasForeignKey("IdTecnologia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RH.Models.EmpresaTecnologia", b =>
                {
                    b.HasOne("RH.Models.Empresa", null)
                        .WithMany()
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RH.Models.Tecnologia", null)
                        .WithMany()
                        .HasForeignKey("IdTecnologia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RH.Models.EmpresaVaga", b =>
                {
                    b.HasOne("RH.Models.Empresa", null)
                        .WithMany()
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RH.Models.Vaga", null)
                        .WithMany()
                        .HasForeignKey("IdVaga")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RH.Models.VagaTecnologia", b =>
                {
                    b.HasOne("RH.Models.Tecnologia", null)
                        .WithMany()
                        .HasForeignKey("IdTecnologia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RH.Models.Vaga", null)
                        .WithMany()
                        .HasForeignKey("IdVaga")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RH.Models.VagaTecnologiaRequisito", b =>
                {
                    b.HasOne("RH.Models.Tecnologia", null)
                        .WithMany()
                        .HasForeignKey("IdTecnologia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RH.Models.Vaga", null)
                        .WithMany()
                        .HasForeignKey("IdVaga")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RH.Models.VinculoCanditadoVaga", b =>
                {
                    b.HasOne("RH.Models.Candidato", null)
                        .WithMany()
                        .HasForeignKey("IdCandidato")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RH.Models.Vaga", null)
                        .WithMany()
                        .HasForeignKey("IdVaga")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RH.Models.VinculoCanditadoVagaTecnologia", b =>
                {
                    b.HasOne("RH.Models.Tecnologia", null)
                        .WithMany()
                        .HasForeignKey("IdTecnologia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RH.Models.VinculoCanditadoVaga", null)
                        .WithMany()
                        .HasForeignKey("IdVinculoCandidatoVaga")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
